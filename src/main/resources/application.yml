server:
  port: 8000
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
      
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/moneybook?serverTimezone=Asia/Seoul
#    username: cos
#    password: cos1234
    url: jdbc:mysql://localhost:3306/moneybook?serverTimezone=Asia/Seoul
    username: root
    password: 111111
  
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update 
      # update, none, create(테이블이 있어도 신규로 생성한다 - 데이터가 삭제됨 - 처음에만 create고 바로 update로 수정)
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        # (위) Entity(테이블)를 만들 때 변수명 그대로 필드를 넣어준다.
        #physical-strategy: org.hibernate.boot.model.naming.SpringPhysicalNamingStrategy
        # (위) myEmail(ex.) => my_email로 필드가 상성된다.
      use-new-id-generator-mappings: false 
      # (위)를 false로 하면 jpa가 사용하는 기본 넘버링 전략을 따라가지 않는다는 뜻이며,
      # 테이블생성 클래스(ex.User.java) 내 @GeneratedValue에서 
      # 프로젝트에서 연결된 DB의 넘버링 전략을 따라간다고 설정했다.
    #show-sql: true #디버깅할 때는 데이터가 잘 안보이니 주석처리해놓는다.
    # true값이면 프로젝트를 실행하면 console창에서 실행된 sql을 보여준다.
    properties:
      hibernate.format_sql: true
      # properties 내 hibernate.format_sql: true을 주면
      # show-sql: true로 인해 출력되는 sql이 '보기좋게' 출력된다.

# 카카오로 로그인하는 사람들이 회원가입될 때 만들어지는 Password를 key값으로 고정한다. 
# 절대 유출되면 안됨!
cos:
  key: cos1234